# Structor MCP 工具使用指南

## 概述
这是一个用于索引和管理项目中组件、Hooks、工具函数的 MCP 工具。在生成代码时，请优先使用项目中已有的组件和工具函数。

## 可用的 MCP 工具

### 1. scan_project
扫描项目中的所有组件和工具函数，建立索引。
- 使用场景：首次使用或项目结构发生变化时
- 参数：无
- 返回：扫描结果统计

### 2. search_components
搜索项目中的组件和工具函数。
- 参数：
  - query: 搜索关键词
  - type: 可选，组件类型 (component/hook/utility/type)
  - limit: 可选，返回结果数量限制
- 返回：匹配的组件列表，包含匹配度评分

### 3. get_component
获取特定组件的详细信息。
- 参数：
  - id: 组件ID
- 返回：组件的详细信息，包括属性、依赖、描述等

### 4. list_components
列出项目中的所有组件。
- 参数：
  - type: 可选，按类型过滤
  - limit: 可选，返回数量限制
- 返回：组件列表，按类型分组

### 5. update_config
更新索引配置。
- 参数：
  - config: 新的配置对象
- 返回：配置更新确认

## 代码生成最佳实践

### 1. 生成组件前先搜索
在生成新组件之前，先使用 `search_components` 搜索是否已有类似组件：
```
搜索包含 "button" 的组件
```

### 2. 查看现有组件详情
如果找到相似组件，使用 `get_component` 查看详细信息：
```
查看组件 "Button" 的详细信息
```

### 3. 优先使用现有组件
如果找到合适的现有组件，在代码中引用它而不是重新生成。

### 4. 生成新组件时参考现有模式
查看现有组件的结构和属性定义，保持项目的一致性。

## 示例工作流

### 场景：需要创建一个用户头像组件

1. **搜索现有组件**
   ```
   搜索包含 "avatar" 或 "user" 的组件
   ```

2. **查看相似组件**
   ```
   查看组件 "UserProfile" 的详细信息
   ```

3. **基于现有模式生成**
   如果找到相似组件，参考其属性定义和结构生成新组件。
   如果没有找到，生成新组件时参考项目中其他组件的命名和结构模式。

4. **更新索引**
   生成新组件后，可以重新扫描项目以更新索引。

## 注意事项

- 定期运行 `scan_project` 以保持索引的最新状态
- 在大型项目中，使用 `type` 参数过滤搜索结果以提高效率
- 生成组件时，尽量遵循项目中已有的命名规范和结构模式
- 如果发现重复功能的组件，建议重构使用统一的组件 